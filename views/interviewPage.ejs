<!DOCTYPE html>

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Interview Page</title>
  <link rel="stylesheet" href="css/styles.css">
  <link rel="stylesheet" href="css/interviewPage.css">

  <!-- You can replace JSDeliver with another CDN if you prefer to -->
  <script src="https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision/vision_bundle.js" crossorigin="anonymous"></script>

</head>

<body>
  <div>
    <h3>Webcam</h3>
    <div class="video-container">
      <video id="webcam"></video>
    </div>
  </div>
  <script>
    window.onload = function () {
      let All_mediaDevices = navigator.mediaDevices;
      if (!All_mediaDevices || !All_mediaDevices.getUserMedia) {
        console.log("getUserMedia() not supported.");
        return;
      }
      All_mediaDevices.getUserMedia({
        audio: true,
        video: true,
      })
        .then(function (vidStream) {
          var video = document.getElementById("webcam");
          if ("srcObject" in video) {
            video.srcObject = vidStream;
          } else {
            video.src = window.URL.createObjectURL(vidStream);
          }
          video.onloadedmetadata = function (e) {
            video.play();
          };
        })
        .catch(function (e) {
          console.log(e.name + ": " + e.message);
        });
    };

  //   async function activateCamera() {
  //     const vision = await FilesetResolver.forVisionTasks(
  //       // path/to/wasm/root
  //       "https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@latest/wasm"
  //     );
  //     const faceLandmarker = await faceLandmarker.createFromOptions(
  //         vision,
  //         {
  //           baseOptions: {
  //             modelAssetPath: "../public/models/face_landmarker.task"
  //           },
  //           runningMode: runningMode
  //         });

  //         await faceLandmarker.setOptions({ runningMode: "VIDEO" });


  //         let lastVideoTime = -1;
  //         function renderLoop() {
  //           const video = document.getElementById("webcam");

  //           if (video.currentTime !== lastVideoTime) {
  //             const faceLandmarkerResult = faceLandmarker.detectForVideo(video);
  //             processResults(detections);
  //             lastVideoTime = video.currentTime;
  //           }

  //           requestAnimationFrame(() => {
  //             renderLoop();
  //           });
  //         }
  //       }

  //       activateCamera();
  </script>
</body>

</html>
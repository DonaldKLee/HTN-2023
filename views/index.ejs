<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Audio Recorder</title>
</head>
<body>
    <!-- <script src="https://mozilla.github.io/pdf.js/build/pdf.js"></script> -->

    <button id="startRecording">Start Recording</button>
    <button id="stopRecording">Stop Recording</button>
    <a id="downloadLink" style="display: none">Download Audio</a>

    <h3>Upload a pdf of your resume file or it's text (later) so we can generate questions for you!</h3>

    <input type="file" id="resumeInput" name="resume" accept=".pdf"/>
    <button type="button" onclick="submitPDF()" id="submitPDF">Submit</button>

     <!-- The core Firebase JS SDK is always required and must be listed first -->
     <script src="https://www.gstatic.com/firebasejs/8.3.0/firebase-app.js"></script>
     <script src="https://www.gstatic.com/firebasejs/8.3.0/firebase-storage.js"></script>
    <script>
        const startRecordingButton = document.getElementById('startRecording');
        const stopRecordingButton = document.getElementById('stopRecording');
        const downloadLink = document.getElementById('downloadLink');
        let mediaRecorder;
        let audioChunks = [];

        startRecordingButton.addEventListener('click', startRecording);
        stopRecordingButton.addEventListener('click', stopRecording);

        async function startRecording() {
            try {
                const stream = await navigator.mediaDevices.getUserMedia({ audio: true });

                mediaRecorder = new MediaRecorder(stream);

                mediaRecorder.ondataavailable = (event) => {
                    if (event.data.size > 0) {
                        audioChunks.push(event.data);
                    }
                };

                mediaRecorder.onstop = async () => {
                    const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });
                    console.log(audioBlob);
                    const formData = new FormData();
                    formData.append('audio', audioBlob, 'recording.wav');

                    fetch('/upload-audio', {
                        method: 'POST',
                        body: formData,
                    })

                    downloadLink.style.display = 'block';
                };

                mediaRecorder.start();

                startRecordingButton.disabled = true;
                stopRecordingButton.disabled = false;
            } catch (error) {
                console.error('Error accessing microphone:', error);
            }
        }

        function stopRecording() {
            if (mediaRecorder && mediaRecorder.state !== 'inactive') {
                mediaRecorder.stop();
                audioChunks = [];
                startRecordingButton.disabled = false;
                stopRecordingButton.disabled = true;
            }
        }
    </script>
    
<script>
    function submitPDF() {
        resumeFile = document.getElementById("resumeInput").files[0];

        const firebaseConfig = {
            apiKey: "AIzaSyBXA0ZXlNgdgZfKK4yjnmjuQpc78lBAiog",
            authDomain: "hackthenorth-ed2fa.firebaseapp.com",
            projectId: "hackthenorth-ed2fa",
            storageBucket: "hackthenorth-ed2fa.appspot.com",
            messagingSenderId: "95447128297",
            appId: "1:95447128297:web:52a1e7256c70e82b9c7878",
            measurementId: "G-K1TGR981FM"
            };

        firebase.initializeApp(firebaseConfig);

        const ref = firebase.storage().ref();
        const name = `${new Date}-${resumeFile.name}`
        const metadata = {
            contentType : resumeFile.type
        }
        const pdfFile = ref.child(name).put(resumeFile, metadata)

        pdfFile
        .then(snapshot => snapshot.ref.getDownloadURL())
        .then(url => {
            console.log(url);
            fetch(`/quiz/uploadResume?r=${url}`, {
                method: 'GET',
            }).then((resp) => {
                return resp.json();
            }).then((data) => {
                console.log(data);
            }).catch((error) => {
                console.error('Error:', error);
            });
        })
        .catch(err => console.log(err))
        downloadLink.style.display = 'block';
    };
</script>
</body>
</html>